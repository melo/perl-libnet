package Net::SNMP::BER;

use Convert::BER qw(/BER/);

use vars qw($VERSION @ISA);

@ISA = qw(Convert::BER);
$VERSION = "1.01";

Net::SNMP::BER->define(

    # Name		Type		Tag
    ########################################

    [ SNMP_IPADDRESS,	STRING,		BER_APPLICATION | 0x00 ],
    [ SNMP_COUNTER,	INTEGER,	BER_APPLICATION | 0x01 ],
    [ SNMP_GAUGE,	INTEGER,	BER_APPLICATION | 0x02 ],
    [ SNMP_TIMETICKS,	INTEGER,	BER_APPLICATION | 0x03 ],
    [ SNMP_OPAQUE,	STRING,		BER_APPLICATION | 0x04 ],
    [ SNMP_NSAP,	STRING,		BER_APPLICATION | 0x05 ],
    [ SNMP_COUNTER64,	INTEGER,		BER_APPLICATION | 0x06 ],
    [ SNMP_UINTEGER,	INTEGER,	BER_APPLICATION | 0x07 ],

    [ GET_REQ_MSG,	SEQUENCE,	BER_CONTEXT | BER_CONSTRUCTOR | 0x00 ],
#    [ GETNEXT_REQ_MSG	    (ASN_CONTEXT | ASN_CONSTRUCTOR | 0x1)
#    [ GET_RSP_MSG	    (ASN_CONTEXT | ASN_CONSTRUCTOR | 0x2)
#    [ SET_REQ_MSG	    (ASN_CONTEXT | ASN_CONSTRUCTOR | 0x3)
#    [ TRP_REQ_MSG	    (ASN_CONTEXT | ASN_CONSTRUCTOR | 0x4)

#    [ GETBULK_REQ_MSG	    (ASN_CONTEXT | ASN_CONSTRUCTOR | 0x5)
#    [ INFORM_REQ_MSG	    (ASN_CONTEXT | ASN_CONSTRUCTOR | 0x6)
#    [ TRP2_REQ_MSG	    (ASN_CONTEXT | ASN_CONSTRUCTOR | 0x7)
#    [ REPORT_MSG	    (ASN_CONTEXT | ASN_CONSTRUCTOR | 0x8)

#    [ SNMP_NOSUCHOBJECT    (ASN_CONTEXT | ASN_PRIMITIVE | 0x0)
#    [ SNMP_NOSUCHINSTANCE  (ASN_CONTEXT | ASN_PRIMITIVE | 0x1)
#    [ SNMP_ENDOFMIBVIEW    (ASN_CONTEXT | ASN_PRIMITIVE | 0x2)

);

1;
